   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  21              	.Ltext0:
  22              		.file 1 "../main.c"
 2665              		.align	2
 2668              	NCOL:
 2669 0000 03000000 		.word	3
 2670              		.comm	str,1,4
 2671              		.comm	tablero,36,4
 2672              		.text
 2673              		.align	2
 2674              		.global	Main
 2676              	Main:
 2677              	.LFB0:
   1:../main.c     **** /*--- ficheros de cabecera ---*/
   2:../main.c     **** #include "44blib.h"
   3:../main.c     **** #include "44b.h"
   4:../main.c     **** #include "uart.h"
   5:../main.c     **** #include "visualizacion.h"
   6:../main.c     **** #include "playerMovement.h"
   7:../main.c     **** 
   8:../main.c     **** extern void keyboard_init();
   9:../main.c     **** 
  10:../main.c     **** int empezar; // Si el maletín ha pulsado el botón
  11:../main.c     **** int empezarOtro;
  12:../main.c     **** 
  13:../main.c     **** int turno;
  14:../main.c     **** 
  15:../main.c     **** const int NCOL = 3;
  16:../main.c     **** 
  17:../main.c     **** char str[1];
  18:../main.c     **** int tablero[9]; // 0 vacío, 1 el primer jugador, 2 el segundo jugador
  19:../main.c     **** 
  20:../main.c     **** 
  21:../main.c     **** /*--- declaracion de funciones ---*/
  22:../main.c     **** int Main(void);
  23:../main.c     **** 
  24:../main.c     **** int Main(void){
 2678              		.loc 1 24 0
 2679              		.cfi_startproc
 2680              		@ Function supports interworking.
 2681              		@ args = 0, pretend = 0, frame = 24
 2682              		@ frame_needed = 1, uses_anonymous_args = 0
 2683 0000 0DC0A0E1 		mov	ip, sp
 2684              	.LCFI0:
 2685              		.cfi_def_cfa_register 12
 2686 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2687 0008 04B04CE2 		sub	fp, ip, #4
 2688              		.cfi_offset 14, -8
 2689              		.cfi_offset 13, -12
 2690              		.cfi_offset 11, -16
 2691              	.LCFI1:
 2692              		.cfi_def_cfa 11, 4
 2693 000c 18D04DE2 		sub	sp, sp, #24
  25:../main.c     **** 
  26:../main.c     **** 	int i;
  27:../main.c     **** 	//Inicializamos el tablero:
  28:../main.c     **** 	for ( i = 0; i < NCOL*NCOL; i++){
 2694              		.loc 1 28 0
 2695 0010 0030A0E3 		mov	r3, #0
 2696 0014 10300BE5 		str	r3, [fp, #-16]
 2697 0018 060000EA 		b	.L2
 2698              	.L3:
  29:../main.c     **** 		tablero[i] = 0;
 2699              		.loc 1 29 0 discriminator 2
 2700 001c D0319FE5 		ldr	r3, .L13
 2701 0020 10201BE5 		ldr	r2, [fp, #-16]
 2702 0024 0010A0E3 		mov	r1, #0
 2703 0028 021183E7 		str	r1, [r3, r2, asl #2]
  28:../main.c     **** 	for ( i = 0; i < NCOL*NCOL; i++){
 2704              		.loc 1 28 0 discriminator 2
 2705 002c 10301BE5 		ldr	r3, [fp, #-16]
 2706 0030 013083E2 		add	r3, r3, #1
 2707 0034 10300BE5 		str	r3, [fp, #-16]
 2708              	.L2:
  28:../main.c     **** 	for ( i = 0; i < NCOL*NCOL; i++){
 2709              		.loc 1 28 0 is_stmt 0 discriminator 1
 2710 0038 B8319FE5 		ldr	r3, .L13+4
 2711 003c 003093E5 		ldr	r3, [r3, #0]
 2712 0040 B0219FE5 		ldr	r2, .L13+4
 2713 0044 002092E5 		ldr	r2, [r2, #0]
 2714 0048 930202E0 		mul	r2, r3, r2
 2715 004c 10301BE5 		ldr	r3, [fp, #-16]
 2716 0050 030052E1 		cmp	r2, r3
 2717 0054 F0FFFFCA 		bgt	.L3
  30:../main.c     **** 	}
  31:../main.c     **** 
  32:../main.c     **** 	empezar = 0;
 2718              		.loc 1 32 0 is_stmt 1
 2719 0058 9C319FE5 		ldr	r3, .L13+8
 2720 005c 0020A0E3 		mov	r2, #0
 2721 0060 002083E5 		str	r2, [r3, #0]
  33:../main.c     **** 	turno = 1;
 2722              		.loc 1 33 0
 2723 0064 94319FE5 		ldr	r3, .L13+12
 2724 0068 0120A0E3 		mov	r2, #1
 2725 006c 002083E5 		str	r2, [r3, #0]
  34:../main.c     **** 	empezarOtro = 0;
 2726              		.loc 1 34 0
 2727 0070 8C319FE5 		ldr	r3, .L13+16
 2728 0074 0020A0E3 		mov	r2, #0
 2729 0078 002083E5 		str	r2, [r3, #0]
  35:../main.c     **** 	int fin = 0;
 2730              		.loc 1 35 0
 2731 007c 0030A0E3 		mov	r3, #0
 2732 0080 14300BE5 		str	r3, [fp, #-20]
  36:../main.c     **** 
  37:../main.c     **** 	sys_init(); // inicializacion de la placa, interrupciones, puertos
 2733              		.loc 1 37 0
 2734 0084 FEFFFFEB 		bl	sys_init
  38:../main.c     **** 	//friedSeed = -1;
  39:../main.c     **** 	Uart_Init(115200); // inicializacion de la Uart
 2735              		.loc 1 39 0
 2736 0088 78019FE5 		ldr	r0, .L13+20
 2737 008c FEFFFFEB 		bl	Uart_Init
  40:../main.c     **** 	keyboard_init();
 2738              		.loc 1 40 0
 2739 0090 FEFFFFEB 		bl	keyboard_init
  41:../main.c     **** 	Eint4567_init();
 2740              		.loc 1 41 0
 2741 0094 FEFFFFEB 		bl	Eint4567_init
  42:../main.c     **** 
  43:../main.c     **** 	init_visualizacion();
 2742              		.loc 1 43 0
 2743 0098 FEFFFFEB 		bl	init_visualizacion
  44:../main.c     **** 	init_welcome3R();
 2744              		.loc 1 44 0
 2745 009c FEFFFFEB 		bl	init_welcome3R
  45:../main.c     **** 
  46:../main.c     **** 	int emp = 0;
 2746              		.loc 1 46 0
 2747 00a0 0030A0E3 		mov	r3, #0
 2748 00a4 1C300BE5 		str	r3, [fp, #-28]
  47:../main.c     **** 	int empO = 0;
 2749              		.loc 1 47 0
 2750 00a8 0030A0E3 		mov	r3, #0
 2751 00ac 20300BE5 		str	r3, [fp, #-32]
  48:../main.c     **** 
  49:../main.c     **** 	char *pt_str = str;
 2752              		.loc 1 49 0
 2753 00b0 54319FE5 		ldr	r3, .L13+24
 2754 00b4 18300BE5 		str	r3, [fp, #-24]
  50:../main.c     **** 
  51:../main.c     **** 	/*while(empezar == 0 || empezarOtro == 0){
  52:../main.c     **** 		emp = empezar;
  53:../main.c     **** 		*pt_str = Uart1_Getch();
  54:../main.c     **** 		if(*pt_str == 'a'){
  55:../main.c     **** 			empezarOtro =1;
  56:../main.c     **** 			empO=1;
  57:../main.c     **** 		}
  58:../main.c     **** 		pt_str = str;
  59:../main.c     **** 	}
  60:../main.c     **** */
  61:../main.c     **** 	lcd_clear();
 2755              		.loc 1 61 0
 2756 00b8 FEFFFFEB 		bl	lcd_clear
  62:../main.c     **** 	drawTab();
 2757              		.loc 1 62 0
 2758 00bc FEFFFFEB 		bl	drawTab
  63:../main.c     **** 
  64:../main.c     **** 	while(fin == 0){
 2759              		.loc 1 64 0
 2760 00c0 410000EA 		b	.L4
 2761              	.L11:
  65:../main.c     **** 		*pt_str = Uart1_Getch(); // leer caracter
 2762              		.loc 1 65 0
 2763 00c4 FEFFFFEB 		bl	Uart1_Getch
 2764 00c8 0030A0E1 		mov	r3, r0
 2765 00cc 0320A0E1 		mov	r2, r3
 2766 00d0 18301BE5 		ldr	r3, [fp, #-24]
 2767 00d4 0020C3E5 		strb	r2, [r3, #0]
  66:../main.c     **** 		if(*pt_str == 'f'){
 2768              		.loc 1 66 0
 2769 00d8 18301BE5 		ldr	r3, [fp, #-24]
 2770 00dc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2771 00e0 660053E3 		cmp	r3, #102
 2772 00e4 3C00000A 		beq	.L12
 2773              	.L5:
  67:../main.c     **** 			break;
  68:../main.c     **** 		}
  69:../main.c     **** 		if (*pt_str >= 0 && *pt_str < NCOL*NCOL){
 2774              		.loc 1 69 0
 2775 00e8 18301BE5 		ldr	r3, [fp, #-24]
 2776 00ec 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2777 00f0 0320A0E1 		mov	r2, r3
 2778 00f4 FC309FE5 		ldr	r3, .L13+4
 2779 00f8 003093E5 		ldr	r3, [r3, #0]
 2780 00fc F4109FE5 		ldr	r1, .L13+4
 2781 0100 001091E5 		ldr	r1, [r1, #0]
 2782 0104 910303E0 		mul	r3, r1, r3
 2783 0108 030052E1 		cmp	r2, r3
 2784 010c 2C0000AA 		bge	.L7
 2785              	.LBB2:
  70:../main.c     **** 			D8Led_symbol(*pt_str);
 2786              		.loc 1 70 0
 2787 0110 18301BE5 		ldr	r3, [fp, #-24]
 2788 0114 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2789 0118 0300A0E1 		mov	r0, r3
 2790 011c FEFFFFEB 		bl	D8Led_symbol
  71:../main.c     **** 			tablero[*pt_str] = (turno % 2) +1;
 2791              		.loc 1 71 0
 2792 0120 18301BE5 		ldr	r3, [fp, #-24]
 2793 0124 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2794 0128 0310A0E1 		mov	r1, r3
 2795 012c CC309FE5 		ldr	r3, .L13+12
 2796 0130 002093E5 		ldr	r2, [r3, #0]
 2797 0134 C23FA0E1 		mov	r3, r2, asr #31
 2798 0138 A33FA0E1 		mov	r3, r3, lsr #31
 2799 013c 032082E0 		add	r2, r2, r3
 2800 0140 012002E2 		and	r2, r2, #1
 2801 0144 023063E0 		rsb	r3, r3, r2
 2802 0148 012083E2 		add	r2, r3, #1
 2803 014c A0309FE5 		ldr	r3, .L13
 2804 0150 012183E7 		str	r2, [r3, r1, asl #2]
  72:../main.c     **** 			if (turno % 2 == 0){
 2805              		.loc 1 72 0
 2806 0154 A4309FE5 		ldr	r3, .L13+12
 2807 0158 003093E5 		ldr	r3, [r3, #0]
 2808 015c 013003E2 		and	r3, r3, #1
 2809 0160 000053E3 		cmp	r3, #0
 2810 0164 0400001A 		bne	.L8
 2811              	.LBB3:
  73:../main.c     **** 				drawO(*pt_str);
 2812              		.loc 1 73 0
 2813 0168 18301BE5 		ldr	r3, [fp, #-24]
 2814 016c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2815 0170 0300A0E1 		mov	r0, r3
 2816 0174 FEFFFFEB 		bl	drawO
 2817 0178 030000EA 		b	.L9
 2818              	.L8:
 2819              	.LBE3:
 2820              	.LBB4:
  74:../main.c     **** 			}
  75:../main.c     **** 			else {
  76:../main.c     **** 				drawX(*pt_str);
 2821              		.loc 1 76 0
 2822 017c 18301BE5 		ldr	r3, [fp, #-24]
 2823 0180 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2824 0184 0300A0E1 		mov	r0, r3
 2825 0188 FEFFFFEB 		bl	drawX
 2826              	.L9:
 2827              	.LBE4:
  77:../main.c     **** 			}
  78:../main.c     **** 			fin = comprobarFinDelJuego();
 2828              		.loc 1 78 0
 2829 018c FEFFFFEB 		bl	comprobarFinDelJuego
 2830 0190 14000BE5 		str	r0, [fp, #-20]
  79:../main.c     **** 
  80:../main.c     **** 			if(fin != 0){
 2831              		.loc 1 80 0
 2832 0194 14301BE5 		ldr	r3, [fp, #-20]
 2833 0198 000053E3 		cmp	r3, #0
 2834 019c 0300000A 		beq	.L10
 2835              	.LBB5:
  81:../main.c     **** 				drawFin(fin);
 2836              		.loc 1 81 0
 2837 01a0 14001BE5 		ldr	r0, [fp, #-20]
 2838 01a4 FEFFFFEB 		bl	drawFin
  82:../main.c     **** 				Uart1_SendByte('f');
 2839              		.loc 1 82 0
 2840 01a8 6600A0E3 		mov	r0, #102
 2841 01ac FEFFFFEB 		bl	Uart1_SendByte
 2842              	.L10:
 2843              	.LBE5:
  83:../main.c     **** 			}
  84:../main.c     **** 			turno++;
 2844              		.loc 1 84 0
 2845 01b0 48309FE5 		ldr	r3, .L13+12
 2846 01b4 003093E5 		ldr	r3, [r3, #0]
 2847 01b8 012083E2 		add	r2, r3, #1
 2848 01bc 3C309FE5 		ldr	r3, .L13+12
 2849 01c0 002083E5 		str	r2, [r3, #0]
 2850              	.L7:
 2851              	.LBE2:
  85:../main.c     **** 
  86:../main.c     **** 		}
  87:../main.c     **** 		pt_str = str;
 2852              		.loc 1 87 0
 2853 01c4 40309FE5 		ldr	r3, .L13+24
 2854 01c8 18300BE5 		str	r3, [fp, #-24]
 2855              	.L4:
  64:../main.c     **** 	while(fin == 0){
 2856              		.loc 1 64 0 discriminator 1
 2857 01cc 14301BE5 		ldr	r3, [fp, #-20]
 2858 01d0 000053E3 		cmp	r3, #0
 2859 01d4 BAFFFF0A 		beq	.L11
 2860 01d8 000000EA 		b	.L6
 2861              	.L12:
  67:../main.c     **** 			break;
 2862              		.loc 1 67 0
 2863 01dc 0000A0E1 		mov	r0, r0	@ nop
 2864              	.L6:
  88:../main.c     **** 	}
  89:../main.c     **** 	return 0;
 2865              		.loc 1 89 0
 2866 01e0 0030A0E3 		mov	r3, #0
  90:../main.c     **** }
 2867              		.loc 1 90 0
 2868 01e4 0300A0E1 		mov	r0, r3
 2869 01e8 0CD04BE2 		sub	sp, fp, #12
 2870 01ec 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2871 01f0 1EFF2FE1 		bx	lr
 2872              	.L14:
 2873              		.align	2
 2874              	.L13:
 2875 01f4 00000000 		.word	tablero
 2876 01f8 00000000 		.word	NCOL
 2877 01fc 00000000 		.word	empezar
 2878 0200 00000000 		.word	turno
 2879 0204 00000000 		.word	empezarOtro
 2880 0208 00C20100 		.word	115200
 2881 020c 00000000 		.word	str
 2882              		.cfi_endproc
 2883              	.LFE0:
 2885              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
                            *COM*:00000004 empezar
                            *COM*:00000004 empezarOtro
                            *COM*:00000004 turno
C:\Users\Paloma\AppData\Local\Temp\ccPm7CCN.s:2668   .rodata:00000000 NCOL
C:\Users\Paloma\AppData\Local\Temp\ccPm7CCN.s:2665   .rodata:00000000 $d
                            *COM*:00000001 str
                            *COM*:00000024 tablero
C:\Users\Paloma\AppData\Local\Temp\ccPm7CCN.s:2673   .text:00000000 $a
C:\Users\Paloma\AppData\Local\Temp\ccPm7CCN.s:2676   .text:00000000 Main
C:\Users\Paloma\AppData\Local\Temp\ccPm7CCN.s:2875   .text:000001f4 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sys_init
Uart_Init
keyboard_init
Eint4567_init
init_visualizacion
init_welcome3R
lcd_clear
drawTab
Uart1_Getch
D8Led_symbol
drawO
drawX
comprobarFinDelJuego
drawFin
Uart1_SendByte
